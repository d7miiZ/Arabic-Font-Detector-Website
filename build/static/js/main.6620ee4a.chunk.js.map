{"version":3,"sources":["components/MainSection.module.css","components/Description.module.css","UI/Modal.module.css","components/Description.js","assets/results.png","assets/test.png","assets/train.png","components/MainSection.js","UI/Modal.js","assets/nask.png","assets/nask2.png","assets/nask3.png","assets/ruqa.png","assets/ruqa2.png","assets/ruqa3.jpg","components/Demo.js","UI/Footer.js","App.js","index.js","components/Demo.module.css"],"names":["module","exports","authors","className","styles","link","href","target","rel","array","randomIndex","currentIndex","length","Math","floor","random","shuffle","Description","Container","card","maxWidth","MainSection","text","src","test","ResultsImg","alt","style","display","clear","whiteSpace","fontSize","train","results","Backdrop","props","classes","backdrop","onClick","onClose","ModalOverlay","modal","content","children","portalElement","document","getElementById","Modal","ReactDOM","createPortal","useStyles","makeStyles","theme","root","flexWrap","justifyContent","overflow","imageList","width","height","itemData","nask","nask2","nask3","ruqa","ruqa2","ruqa3","map","arr","img","title","key","Demo","useState","lastId","setLastId","sample","setSample","prediction","setPrediction","uploadedImage","setUploadedImage","loading","setLoading","show","setShow","matches","useMediaQuery","onHide","classList","remove","selected","chooseSample","event","id","getAttribute","contains","add","predSample","a","fetch","then","response","contentType","headers","get","blob","file","File","formData","FormData","append","method","body","res","json","pred","onDropAccepted","useCallback","acceptedImage","useDropzone","accept","noClick","noKeyboard","maxFiles","getRootProps","getInputProps","open","sampleBtn","CircularProgress","margin","Button","size","variant","PredBtn","uploadBtn","marginTop","fontFamily","letterSpacing","fontWeight","URL","createObjectURL","PredImg","marginBottom","ImageList","rowHeight","cols","padding","item","ImageListItem","clickable","ImageListItemBar","DropContainer","drop","Footer","App","render"],"mappings":"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","file":"static/js/main.6620ee4a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"text\":\"MainSection_text__1soFh\",\"h3\":\"MainSection_h3__1JEOs\",\"ResultsImg\":\"MainSection_ResultsImg__25AVo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"h1\":\"Description_h1__1ZLqX\",\"card\":\"Description_card__2OEYl\",\"link\":\"Description_link__vW-WL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"backdrop\":\"Modal_backdrop__2PeOa\",\"modal\":\"Modal_modal__2VdVz\",\"slide-down\":\"Modal_slide-down__36hoi\",\"drop\":\"Modal_drop__3wqB9\"};","import Container from \"@material-ui/core/Container\";\r\nimport styles from \"./Description.module.css\";\r\n\r\nconst authors = [\r\n  <a\r\n    className={styles.link}\r\n    href=\"https://github.com/Hawzen\"\r\n    target=\"_blank\"\r\n    rel=\"noreferrer\"\r\n  >\r\n    Hawzen\r\n  </a>,\r\n  <a\r\n    className={styles.link}\r\n    href=\"https://github.com/d7miiZ\"\r\n    target=\"_blank\"\r\n    rel=\"noreferrer\"\r\n  >\r\n    D7miiZ\r\n  </a>,\r\n  <a\r\n    className={styles.link}\r\n    href=\"https://github.com/soraxksa\"\r\n    target=\"_blank\"\r\n    rel=\"noreferrer\"\r\n  >\r\n    SoraxKsa\r\n  </a>,\r\n];\r\n\r\nfunction shuffle(array) {\r\n  let currentIndex = array.length,\r\n    randomIndex;\r\n\r\n  // While there remain elements to shuffle...\r\n  while (0 !== currentIndex) {\r\n    // Pick a remaining element...\r\n    randomIndex = Math.floor(Math.random() * currentIndex);\r\n    currentIndex--;\r\n\r\n    // And swap it with the current element.\r\n    [array[currentIndex], array[randomIndex]] = [\r\n      array[randomIndex],\r\n      array[currentIndex],\r\n    ];\r\n  }\r\n\r\n  return array;\r\n}\r\n\r\nshuffle(authors);\r\n\r\nexport const Description = () => {\r\n  return (\r\n    <div>\r\n      <Container className={styles.card} maxWidth=\"sm\">\r\n        <p>\r\n          Caligraphy Bot (CALBOT) can discern two arabic handwritten fonts, Ruqa (رقعة) and Nask (نسخ) (including each font's variations) from each other. \r\n          Given an image of the handwriting CALBOT uses Convolutional Neural Networks (CNNS) to analyze and predict which font is more similar to the handwriting. \r\n          This page will detail the training process, architecture and results of CALBOT.\r\n        </p>\r\n        <span>\r\n          Done by: {\"\"}\r\n          {authors[0]} {authors[1]} {authors[2]}\r\n        </span>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Description;\r\n","export default __webpack_public_path__ + \"static/media/results.184f1e60.png\";","export default __webpack_public_path__ + \"static/media/test.8c0a4671.png\";","export default __webpack_public_path__ + \"static/media/train.031989d0.png\";","import styles from \"./MainSection.module.css\";\r\nimport Container from \"@material-ui/core/Container\";\r\n\r\n\r\nimport results from \"../assets/results.png\";\r\nimport test from \"../assets/test.png\"\r\nimport train from \"../assets/train.png\"\r\n\r\nexport const MainSection = () => {\r\n  return (\r\n    <section>\r\n      <Container maxWidth=\"sm\" className={styles.text}>\r\n        <h3>Data Collection:</h3>\r\n        <p>\r\n          Finding quality training images isn't an easy task, since data isn't always organized and labeled and fonts aren't clearly defined.\r\n          We opted to generate our training samples from computer fonts. The problem with generating data is that the model tends to memorize the fonts \r\n            we trained it with and not generalize to all variations of the font. Thankfully this can be relieved by applying random transfomations on the images\r\n            like skewing, cropping, bluring, etc.\r\n          We used 7 different fonts for training the model (4 Nask, 3 Ruqa). We used fonts from <a target=\"_blank\" href=\"https://arbfonts.com/arabic_fonts\"  rel=\"noreferrer\">here</a> and \r\n          from <a target=\"_blank\" href=\"https://www.arfonts.net/\"  rel=\"noreferrer\">here</a>. Then sampled a text from <a target=\"_blank\" href=\"https://mawdoo3.com/\"  rel=\"noreferrer\">here</a>. \r\n          After that we started generating images (~500 images), each seven lines long. We cut each image to smaller 200x200 chunks and store them for training.\r\n        </p>\r\n      </Container>\r\n      <Container maxWidth=\"md\">\r\n        <img src={test} className={styles.ResultsImg} alt={\"sry\"}></img>\r\n      </Container>\r\n      <Container maxWidth=\"sm\" className={styles.text}>\r\n        <h3>Model Architecture:</h3>\r\n        <p>\r\n          Our architecture is a simple Conv and Linear layers. Here's more detail\r\n          <span style={{display: \"block\", clear: \"both\", whiteSpace: \"pre\", fontSize: \"0.7em\"}}>\r\n          <br/>\r\n          # Init <br/>\r\n                self.conv1 = nn.Conv2d(1, 10, kernel_size=3, padding=1)  <br/>\r\n                self.conv2 = nn.Conv2d(10, 30, kernel_size=3, padding=1)<br/>\r\n                self.conv3 = nn.Conv2d(30, 50, kernel_size=3, padding=1)<br/>\r\n                self.conv4 = nn.Conv2d(50, 70, kernel_size=3, padding=1)<br/>\r\n                self.pool = nn.MaxPool2d(kernel_size=3, stride=2)<br/>\r\n                <br/>\r\n                self.fc1 = nn.Linear(70 * 11 * 11, 437) <br/>\r\n                self.fc2 = nn.Linear(437, 109)<br/>\r\n                self.fc3 = nn.Linear(109, 50)<br/>\r\n                self.fc4 = nn.Linear(50, 2)<br/>\r\n                \r\n          <br/><br/>#Forward <br/>\r\n                x = self.pool(F.relu(self.conv1(x)))<br/>\r\n                x = self.pool(F.relu(self.conv2(x)))<br/>\r\n                x = self.pool(F.relu(self.conv3(x)))<br/>\r\n                x = self.pool(F.relu(self.conv4(x)))<br/>\r\n                <br/>\r\n                x = torch.flatten(x, 1) # flatten all dimensions except batch<br/>\r\n                x = F.relu(self.fc1(x))<br/>\r\n                x = F.relu(self.fc2(x))<br/>\r\n                x = F.relu(self.fc3(x))<br/>\r\n                x = self.fc4(x)<br/>\r\n                return x<br/>\r\n                <br/>\r\n          </span>\r\n          We also experimented with augmenting our training data so that the model generalizes better, rather than memorizing the fonts we used.\r\n          Heres a sample from the training data:\r\n        </p>\r\n      </Container>\r\n      <Container maxWidth=\"md\">\r\n        <img src={train} className={styles.ResultsImg} alt={\"sry\"}></img>\r\n      </Container>\r\n      <Container maxWidth=\"sm\" className={styles.text}>\r\n        <h3>Results:</h3>\r\n        <p>\r\n          The model seems to capture the different universal characters of the two fonts, for example, Ruqa will usually write the dots as one stroke rather than seperate dots. \r\n          So testing it with an image it didnt saw before of a Ruqa-like font will usually perform well.\r\n          The model scored an accuracy of 100% on the training, validation and testing. Though all of the three mentioned sets are generated so that doesn't mean as much.\r\n          The model however scored a 31/32 from photos of various sources, as shown in the picture:\r\n        </p>\r\n      </Container>\r\n      <Container maxWidth=\"md\">\r\n        <img src={results} className={styles.ResultsImg} alt={\"sry\"}></img>\r\n      </Container>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default MainSection;\r\n","import { Fragment } from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport classes from './Modal.module.css';\r\n\r\nconst Backdrop = (props) => {\r\n  return <div className={classes.backdrop} onClick={props.onClose}/>;\r\n};\r\n\r\nconst ModalOverlay = (props) => {\r\n  return (\r\n    <div className={`${classes.modal} ${props.classes}`}>\r\n      <div className={classes.content}>{props.children}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst portalElement = document.getElementById('overlays');\r\n\r\nconst Modal = (props) => {\r\n  return (\r\n    <Fragment>\r\n      {ReactDOM.createPortal(<Backdrop onClose={props.onClose} />, portalElement)}\r\n      {ReactDOM.createPortal(\r\n        <ModalOverlay classes={props.classes}>{props.children}</ModalOverlay>,\r\n        portalElement\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n","export default __webpack_public_path__ + \"static/media/nask.4cb9fc66.png\";","export default __webpack_public_path__ + \"static/media/nask2.2daaa54f.png\";","export default __webpack_public_path__ + \"static/media/nask3.15cdabc3.png\";","export default __webpack_public_path__ + \"static/media/ruqa.f34d6854.png\";","export default __webpack_public_path__ + \"static/media/ruqa2.f03a3c22.png\";","export default __webpack_public_path__ + \"static/media/ruqa3.090df105.jpg\";","import { useDropzone } from \"react-dropzone\";\r\nimport { useCallback, useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport ImageList from \"@material-ui/core/ImageList\";\r\nimport ImageListItem from \"@material-ui/core/ImageListItem\";\r\nimport ImageListItemBar from \"@material-ui/core/ImageListItemBar\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport { Container, useMediaQuery } from \"@material-ui/core\";\r\n\r\nimport styles from \"./Demo.module.css\";\r\nimport Modal from \"../UI/Modal\";\r\n\r\nimport nask from \"../assets/nask.png\";\r\nimport nask2 from \"../assets/nask2.png\";\r\nimport nask3 from \"../assets/nask3.png\";\r\nimport ruqa from \"../assets/ruqa.png\";\r\nimport ruqa2 from \"../assets/ruqa2.png\";\r\nimport ruqa3 from \"../assets/ruqa3.jpg\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n    justifyContent: \"space-around\",\r\n    overflow: \"hidden\",\r\n  },\r\n  imageList: {\r\n    width: 500,\r\n    height: 450,\r\n  },\r\n}));\r\n\r\nconst itemData = [[nask, \"Nask1\"], [nask2, \"Nask2\"], [nask3, \"Nask3\"], [ruqa, \"Ruqa1\"], [ruqa2, \"Ruqa2\"], [ruqa3, \"Ruqa3\"]].map(arr => \r\n  {\r\n    return {\r\n      img: arr[0],\r\n      title: arr[1],\r\n      key: arr[1]\r\n    }\r\n});\r\n\r\nexport const Demo = () => {\r\n  const [lastId, setLastId] = useState(0);\r\n  const [sample, setSample] = useState(\"\");\r\n  const [prediction, setPrediction] = useState(\"\");\r\n  const [uploadedImage, setUploadedImage] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const [show, setShow] = useState(false);\r\n\r\n  const classes = useStyles();\r\n\r\n  const matches = useMediaQuery('(min-width:600px)');\r\n\r\n  const onHide = () => {\r\n    if (lastId !== 0) {\r\n      document.getElementById(lastId).classList.remove(styles.selected);\r\n    }\r\n    setSample(\"\");\r\n    setUploadedImage(null);\r\n    setLastId(0);\r\n    setShow(false);\r\n  };\r\n\r\n  const chooseSample = (event) => {\r\n    const id = event.target.getAttribute(\"data-key\");\r\n    const src = event.target.src;\r\n\r\n    if (lastId === id) {\r\n      if (document.getElementById(lastId).classList.contains(styles.selected)) {\r\n        document.getElementById(lastId).classList.remove(styles.selected);\r\n        setSample(\"\");\r\n      } else {\r\n        document.getElementById(lastId).classList.add(styles.selected);\r\n        setSample(src);\r\n        setUploadedImage(null)\r\n      }\r\n    } else {\r\n      if (lastId !== 0) {\r\n        document.getElementById(lastId).classList.remove(styles.selected);\r\n      }\r\n      document.getElementById(id).classList.add(styles.selected);\r\n      setSample(src);\r\n      setUploadedImage(null)\r\n    }\r\n    setLastId(id);\r\n  };\r\n\r\n  const predSample = async () => {\r\n    setLoading(true);\r\n    fetch(sample).then(async (response) => {\r\n      const contentType = response.headers.get(\"content-type\");\r\n      const blob = await response.blob();\r\n      const file = new File([blob], sample, { contentType });\r\n\r\n      let formData = new FormData();\r\n      formData.append(\"image\", file);\r\n\r\n      fetch(\"https://calbot-backend.onrender.com/api/calbot/predict\", {\r\n        method: \"POST\",\r\n        body: formData,\r\n      })\r\n        .then((res) => res.json())\r\n        .then((pred) => {\r\n          setPrediction(pred.pred);\r\n          setLoading(false);\r\n          setShow(true);\r\n        });\r\n    });\r\n  };\r\n\r\n  const predUploadedImg = () => {\r\n    setLoading(true);\r\n    let formData = new FormData();\r\n    formData.append(\"image\", uploadedImage);\r\n\r\n    fetch(\"https://calbot-backend.onrender.com/api/calbot/predict\", {\r\n      method: \"POST\",\r\n      body: formData,\r\n    })\r\n      .then((res) => res.json())\r\n      .then((pred) => {\r\n        setPrediction(pred.pred);\r\n        setLoading(false);\r\n        setShow(true);\r\n      });\r\n  };\r\n\r\n  const onDropAccepted = useCallback((acceptedImage) => {\r\n    setUploadedImage(acceptedImage[0]);\r\n    setSample(\"\")\r\n  }, []);\r\n\r\n  const { getRootProps, getInputProps, open } = useDropzone({\r\n    accept: \".png, .jpg, .jpeg\",\r\n    noClick: true,\r\n    noKeyboard: true,\r\n    maxFiles: 1,\r\n    // maxSize: 2^20 * 50, // Enabling this makes dropzone reject every photo?\r\n    onDropAccepted,\r\n  });\r\n\r\n  const sampleBtn = !loading ? (\r\n    <Button size=\"large\" variant=\"contained\" className={styles.PredBtn} onClick={predSample}>\r\n      Predict\r\n    </Button>\r\n  ) : (\r\n    <CircularProgress className={styles.margin}></CircularProgress>\r\n  );\r\n\r\n  const uploadBtn = !loading ? (\r\n    <Button\r\n      size=\"large\"\r\n      variant=\"contained\"\r\n      onClick={predUploadedImg}\r\n    >\r\n      Predict\r\n    </Button>\r\n  ) : (\r\n    <CircularProgress className={styles.margin}></CircularProgress>\r\n  );\r\n\r\n  return (\r\n    \r\n    <div style={{marginTop: \"2em\"}}>\r\n    <code style={{fontSize: \"7em\", fontFamily: \"monospace\", letterSpacing: \"0.1em\", fontWeight: \"\"}}>DEMO</code>\r\n      {show && (\r\n        <Modal onClose={onHide} classes={styles.modal}>\r\n          <h4>Predicted Image:</h4>\r\n          <img\r\n            src={sample === \"\" ? URL.createObjectURL(uploadedImage) : sample}\r\n            className={styles.PredImg}\r\n            style={{marginBottom: \"1em\"}}\r\n            alt={\"sry\"}\r\n          ></img>\r\n          <h3>CALBOT predicts: <i><b>{prediction}</b></i></h3>\r\n          <Button variant=\"outlined\" onClick={onHide} style={{margin: \"1em\"}}>\r\n            CLOSE\r\n          </Button>\r\n        </Modal>\r\n      )}\r\n      <h2 style={{margin: \"2em\"}}>See the model in action by choosing a sample image</h2>\r\n      <div className={classes.root}>\r\n        <ImageList rowHeight={180} cols={matches ? 3 : 2} className={classes.imageList} style={{padding: \"0px\"}}>\r\n          {/* <ImageListItem key=\"Subheader\" cols={2} style={{ height: \"auto\" }}> // Why is this an item??\r\n            <ListSubheader component=\"div\">samples</ListSubheader>\r\n          </ImageListItem> */}\r\n          {itemData.map((item) => (\r\n            <ImageListItem key={item.key}>\r\n              <img\r\n                className={styles.clickable}\r\n                src={item.img}\r\n                alt={item.title}\r\n                onClick={chooseSample}\r\n                data-key={item.key}\r\n              />\r\n              <ImageListItemBar id={`${item.key}`} title={item.title} />\r\n            </ImageListItem>\r\n          ))}\r\n        </ImageList>\r\n      </div>\r\n      <div className={styles.DropContainer}>\r\n        <h2 style={{margin: \"1em\"}}>Or upload your own image</h2>\r\n        <div className={styles.drop}>\r\n          <div {...getRootProps({ className: \"dropzone\" })}>\r\n            <input {...getInputProps()} />\r\n            <Button variant=\"outlined\" onClick={open}>\r\n              <span>UPLOAD</span>\r\n            </Button>\r\n            <p style={{ padding: \"20px\" }}>\r\n              (Only *.jpg *.jpeg *.png)\r\n            </p>\r\n          </div>\r\n        </div>\r\n        {(uploadedImage !== null || sample !== \"\") && (\r\n          <Container maxWidth=\"sm\">\r\n            <h4>Chosen image: </h4>\r\n            <img\r\n              className={styles.PredImg}\r\n              src={sample === \"\" ? URL.createObjectURL(uploadedImage) : sample}\r\n              alt={\"sry\"}\r\n            ></img>\r\n          </Container>\r\n        )}\r\n        <Container style={{marginTop: \"2em\"}}>\r\n            {uploadedImage !== null && uploadBtn}\r\n            {sample !== \"\" && sampleBtn}\r\n          </Container>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Demo;\r\n","\r\nexport const Footer = () => {\r\n\r\n    return(\r\n        <footer style={{marginBottom: \"3em\", marginTop: \"2em\"}}>\r\n            <h4 style={{marginBottom: \"0em\"}}>\r\n                Source Code\r\n            </h4>\r\n            <p>You can find the source code <a href=\"https://github.com/d7miiZ/Arabic-Font-Detector\"  target=\"_blank\"  rel=\"noreferrer\">here</a></p>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer","import \"./App.css\";\r\nimport Description from \"./components/Description\";\r\nimport MainSection from \"./components/MainSection\";\r\nimport Demo from \"./components/Demo\";\r\nimport Footer from \"./UI/Footer\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <code style={{fontSize: \"7em\", fontFamily: \"monospace\", letterSpacing: \"0.1em\", fontWeight: \"\"}}>CALBOT</code>\r\n      <Description/>\r\n      <MainSection/>\r\n      <Demo/>\r\n      <Footer/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n    <App />,\r\n  document.getElementById('root')\r\n);\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"drop\":\"Demo_drop__qJuud\",\"DropContainer\":\"Demo_DropContainer__1TxRD\",\"selected\":\"Demo_selected__1wQ1X\",\"clickable\":\"Demo_clickable__e7w-1\",\"margin\":\"Demo_margin__2dTo5\",\"PredImg\":\"Demo_PredImg__1FJBV\",\"modal\":\"Demo_modal__TQm53\"};"],"sourceRoot":""}